<?php


namespace App\Presenters\AdminModule;

use App\Forms\Admin\SettingsForm; // __construct(Presenter, Context);
use App\Model\Security\Auth\Authenticator;
use App\Model\SettingsRepository;
use App\Presenters\AdminBasePresenter;

use Nette;
use Nette\Database\Context;
use Nette\Application\UI\Form;
use Nette\Application\AbortException;
use Nette\Application\BadRequestException;
use Nette\Application\Responses\FileResponse;

/**
 * Class AdminPresenter
 * @package App\Presenters
 */
class MainPresenter extends AdminBasePresenter
{
    use Nette\SmartObject;

    Private Context $db;
    Private SettingsRepository $settingsRepository;

    /**
     * AdminPresenter constructor.
     * @param Authenticator $authenticator
     * @param Context $db
     * @param SettingsRepository $settingsRepository
     */
    public function __construct(Authenticator $authenticator, Context $db, SettingsRepository $settingsRepository)
    {
        parent::__construct($authenticator);


        $this->db = $db;
        $this->settingsRepository = $settingsRepository;
    }

    public function startup(): void
    {
        parent::startup(); // TODO: Change the autogenerated stub
    }

    /* pÅ™ehledy, a nastavenÃ­ webu */
    public function renderHome(): void {
        $this->template->web = $this->db->table('nastaveni')->get(1);
        $this->template->stats = [
            "clanky" => $this->db->table('articles')->count('*'),
            "stranky" => $this->db->table('pages')->count('*'),
            "administrators" => $this->db->table('admin')->count('*'),
        ];
    }

    public function renderSettings() {
        $this->template->logo = $this->settingsRepository->getLogo();
    }

    protected function createComponentSettingsForm(): Form
    {
        return (new SettingsForm($this, $this->settingsRepository))->create();
    }
}
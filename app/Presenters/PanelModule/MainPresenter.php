<?php
namespace App\Presenters\PanelModule;

use App\Forms\Panel\Main\FastLoginForm;
use App\Model\API\Minecraft;
use App\Model\API\Plugin\Friends;
use App\Model\API\Plugin\TokenManager;
use App\Model\API\Plugin\FastLogin;
use App\Model\Panel\MojangRepository;
use App\Model\Security\Auth\PluginAuthenticator;
use App\Model\SettingsRepository;
use App\Presenters\PanelBasePresenter;

use Nette\Application\AbortException;
use Nette\Application\UI\Multiplier;
use Nette\Database\Table\ActiveRow;

/**
 * Class MainPresenter
 * @package App\Presenters\PanelModule
 */
class MainPresenter extends PanelBasePresenter
{
    private PluginAuthenticator $pluginAuthenticator;
    private ActiveRow $user;
    private FastLogin $fastLogin;
    private MojangRepository $mojangRepository;
    private TokenManager $tokenManager;
    private Friends $friends;

    /**
     * MainPresenter constructor.
     * @param PluginAuthenticator $pluginAuthenticator
     * @param SettingsRepository $settingsRepository
     * @param FastLogin $fastLogin
     * @param MojangRepository $mojangRepository
     * @param TokenManager $tokenManager
     * @param Friends $friends
     */
    public function __construct(PluginAuthenticator $pluginAuthenticator,
                                SettingsRepository $settingsRepository,
                                FastLogin $fastLogin,
                                MojangRepository $mojangRepository,
                                TokenManager $tokenManager,
                                Friends $friends)
    {
        parent::__construct($settingsRepository);

        $this->pluginAuthenticator = $pluginAuthenticator;
        $this->fastLogin = $fastLogin;
        $this->mojangRepository = $mojangRepository;
        $this->tokenManager = $tokenManager;
        $this->friends = $friends;
    }

    /**
     * @throws AbortException
     */
    public function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub
        $user = $this->pluginAuthenticator->getUser();
        if(!(bool)$user) {
            $this->flashMessage('Pro manipulaci s hráčským panelem, proveďte autorizaci.', 'error');
            $this->redirect('Login:main');
        } else {
            $this->user = $user;
        }
    }

    public function renderHome()
    {
        $mcUser = new \stdClass();
        $mcUser->uuid = $this->mojangRepository->getUUID($this->user->realname);
        $mcUser->skin = Minecraft::getSkinURL($this->mojangRepository->getMojangUUID($this->user->realname));

        $networkStats = new \stdClass();
        $networkStats->tokenRow = $this->tokenManager->getRow($this->user->realname);
        $networkStats->friendsCount = $this->friends->countOfFriends($this->user->realname);

        $this->template->user = $this->user;
        $this->template->fastLogin = $this->fastLogin->getRow($this->user->realname);
        $this->template->networkStats = $networkStats;
        $this->template->mcUser = $mcUser;
    }

    /**
     * @return Multiplier
     */
    public function createComponentFastLoginForm(): Multiplier {
        return new Multiplier(function ($username) {
            return (new FastLoginForm($this, $this->fastLogin, $username))->create();
        });
    }
}